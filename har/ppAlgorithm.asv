function cv = ppAlgorithm(alpha,beta0,Nsim,X)

T = size(X,1);
v = zeros(T,Nsim);

mu = 0;
sig = 1;
v(1,:)  = normrnd(mu,sig,[1,Nsim]);
e = normrnd(0,1,[T,Nsim]);

for t=2:T
    v(t,:) = 0.9*v(t-1,:) + e(t,:);
end


M0 = 16;
M1 = floor(M0/2);
M2 = floor(M1/2);
N0 = 200;
N1 = 2*N0;
N2 = 2*N1;
rho = rand(M0,1)*2-ones(M0,1);
rhoInit0 = [rho, zeros(M0,1)];
Z0 = normrnd(0,1,[T,N0]);
for n_rho = 1:M0
    rhoInit0(n_rho,2) = ppCval(alpha,rho(n_rho),beta0,X,Z0);
end
[~,sortIndex] = sort(rhoInit0(:,2),1,'descend');
rhoInit0 = rhoInit0(sortIndex,1);


rhoInit1 = [rhoInit0(1:M1,1), zeros(M1,1)];
Z1 = normrnd(0,1,[T,N1]);
Finv1 = @(r) -ppCval(alpha,r,mu,beta0,X,Z1);
for n_rho = 1:M1
    [~,fval,exitflag,output] = fminsearch(Finv1,rhoInit0(n_rho));
    rhoInit1(n_rho,2) = -fval;
end
[~,sortIndex] = sort(rhoInit1(:,2),1,'descend');
rhoInit1 = rhoInit1(sortIndex,1);
rhoInit2 = [rhoInit1(1:M2,1), zeros(M2,1)];

Z2 = normrnd(0,1,[T,N2]);
Finv2 = @(r) -ppCval(alpha,r,mu,beta0,X,Z2);
for n_rho = 1:M2
    [~,fval,exitflag,output] = fminsearch(Finv2,rhoInit1(n_rho));
    rhoInit2(n_rho,2) = -fval;
end

cv = max(rhoInit2(:,2));







