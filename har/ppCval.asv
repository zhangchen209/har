function [cv,Tw] = ppCval(alpha,rho,mu,beta0,X,Z)

% PP18 algorithm
T = size(X,1);
p = size(X,2)-1;
Mn = floor(T/10); %bandwidth equals to 1/10
Nsim = size(Z,2);
Tw = zeros(Nsim,1);
if rho>=1
    rho = 0.99;
elseif rho<=-1
    rho = -0.99;
elseif rho==0
    rho = 0.01;
end
Sigma = eye(T);

for i = 2:T
    for j = 1:i-1
        Sigma(i,j) = rho^(i-j);
        Sigma(j,i) = Sigma(i,j);
    end
end

y = mu*ones(T,1)*ones(1,Nsim)+chol(Sigma)*Z;

J = (1:T-1)';
w = (ones(T-1,1) - J/Mn).*(abs(J/Mn)<1);

beta = (X'*X)^-1*X'*y;

Psi = zeros(p+1,p+1);
for sim = 1:Nsim
    v = X.*((y(:,sim)-X*beta(:,sim))*ones(1,size(beta,1)));
    for j=1:T-1
        Psi = Psi +T^-1*w(j)*(v(j+1:T,:)'*v(1:T-j,:));
    end
    Psi = Psi + Psi' + T^-1*(v'*v);
    Tw(sim) = (norm(Psi)~=0)*(beta(1:end-1,sim)-...
        beta0)'*(T*[ones(1,p),0]*(X'*X)^-1*...
        Psi*(X'*X)^-1*[0,ones(1,p)]')^-1*(beta(2:end,sim)-beta0);
end

cv = quantile(Tw,1-alpha);






